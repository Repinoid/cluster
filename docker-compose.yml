services:
  # MinIO для объектного хранилища
  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Web Console
    environment:
      MINIO_ROOT_USER: muser
      MINIO_ROOT_PASSWORD: mpassword
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - trino-network

  # Автоматическое создание бакетов в MinIO
  createbuckets:
    image: quay.io/minio/mc:latest
    container_name: crebuck
    depends_on:
      - minio
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set localminio http://minio:9000 muser mpassword;
      /usr/bin/mc mb localminio/tiny;
      /usr/bin/mc mb localminio/trinod;
      exit 0;
      "
    networks:
      - trino-network

  # PostgreSQL для Hive Metastore
  metastore-db:
    image: postgres:13
    container_name: metastore-db
    environment:
      POSTGRES_DB: metastore
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hivepassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trino-network
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U hive -d metastore"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    # Необязательно, но хороший тон: явно сообщаем, что сервис зависит от здоровья БД
    restart: unless-stopped      

  init-metastore:
    image: apache/hive:3.1.3
    container_name: init-metastore
    depends_on:  
      metastore-db:
        condition: service_healthy  # Ждем, пока БД не станет "healthy"    
    volumes:
      - ./metastore/hive-site.xml:/opt/hive/conf/hive-site.xml
      - ./initm-entrypoint.sh:/entrypoint.sh
    entrypoint: ["/bin/sh", "/entrypoint.sh"]  # ← ПОЛНОСТЬЮ СВОЙ ENTRYPOINT
    networks:
      - trino-network
    # restart: on-failure

  # Hive Metastore сервис
  metastore:
    image: apache/hive:3.1.3
    container_name: metastore
    depends_on:
      init-metastore:
        condition: service_completed_successfully
      metastore-db:
        condition: service_healthy    
    volumes:
      - ./hive-home:/home/hive  # ← Монтируем директорию
      - ./metastore/hive-site.xml:/opt/hive/conf/hive-site.xml

      # If no aws-java-sdk-bundle-1.11.375.jar  - 
      # Query 20250919_120728_00000_e5s7j failed: metastore:9083: Socket is closed by peer.
      - ./jars/aws-java-sdk-bundle-1.11.375.jar:/opt/hive/lib/aws-java-sdk-bundle-1.11.375.jar 

      # if not hadoop-aws-3.2.4.jar presented
      # Query 20250919_121130_00000_wr322 failed: java.lang.RuntimeException: java.lang.ClassNotFoundException: 
      # Class org.apache.hadoop.fs.s3a.S3AFileSystem not found
      - ./jars/hadoop-aws-3.2.4.jar:/opt/hive/lib/hadoop-aws-3.2.4.jar 
      
      - ./metastore-entrypoint.sh:/metastore-entrypoint.sh

    entrypoint: ["/bin/sh", "/metastore-entrypoint.sh"]  # Свой entrypoint
    networks:
      - trino-network

  # Trino coordinator
  trino:
    image: trinodb/trino:latest
    container_name: trino
    depends_on:
      - metastore
      - minio
    ports:
      - "8080:8080"  # Trino UI
    volumes:
      - ./etc:/etc/trino  # Каталог с конфигурацией Trino (catalog.properties, etc.)
    networks:
      - trino-network

volumes:
  minio_data:
  postgres_data:

networks:
  trino-network:
    driver: bridge
